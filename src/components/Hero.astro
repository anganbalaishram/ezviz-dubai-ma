---
interface CarouselItem {
  title: string;
  description: string;
  ctaText: string;
  desktopImage: string;
  mobileImage: string;
  link: string;
}

const items: CarouselItem[] = [
  {
    title: "Wire-Free Cameras",
    description: "EZVIZ Wire-Free cameras offer simple, battery-powered security with HD video and motion detection.",
    ctaText: "Explore Wire Free Cameras",
    desktopImage: "/images/Banner/Wire Free Camera.png",
    mobileImage: "/images/Banner/Wire Free Camera1.png",
    link: "/categories/wireFree"
  },
  {
    title: "Outdoor Wi-FI Cameras",
    description: "EZVIZ Outdoor Wi-Fi cameras offer HD video, motion detection, and weatherproof protection.",
    ctaText: "Explore Outdoor Cameras",
    desktopImage: "/images/Banner/Outdoor Camera.png",
    mobileImage: "/images/Banner/Outdoor Camera1.png",
    link: "/categories/outdoorcamera"
  },
  {
    title: "Indoor Wi-Fi Cameras",
    description: "EZVIZ Indoor Wi-Fi cameras offer HD video, two-way audio, and smart motion detection for home monitoring.",
    ctaText: "Explore Indoor Cameras",
    desktopImage: "/images/Banner/Indoor Camera.png",
    mobileImage: "/images/Banner/Indoor Camera1.png",
    link: "/categories/indoorcamera"
  }
];
---

<!-- Carousel Structured Data for SEO -->
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "ItemList",
  "itemListElement": [
    {
      "@type": "ListItem",
      "position": 1,
      "item": {
        "@type": "WebPage",
        "name": "OUR PRODUCTS",
        "description": "Cutting-edge surveillance solutions designed for superior performance.",
        "url": "/products",
        "image": {
          "@type": "ImageObject",
          "url": "/images/categories/products/hero/Products.png",
          "width": 1920,
          "height": 1080
        }
      }
    },
    {
      "@type": "ListItem",
      "position": 2,
      "item": {
        "@type": "WebPage",
        "name": "LATEST BLOGS",
        "description": "Enhance your home's security with state-of-the-art monitoring solutions.",
        "url": "/blog",
        "image": {
          "@type": "ImageObject",
          "url": "/images/categories/products/hero/Blog.png",
          "width": 1920,
          "height": 1080
        }
      }
    },
    {
      "@type": "ListItem",
      "position": 3,
      "item": {
        "@type": "WebPage",
        "name": "INSIGHTS",
        "description": "Top-tier surveillance solutions tailored for businesses and institutions.",
        "url": "/insights",
        "image": {
          "@type": "ImageObject",
          "url": "/images/categories/products/hero/Insights.png",
          "width": 1920,
          "height": 1080
        }
      }
    }
  ]
}
</script>

<div class="professional-carousel-wrapper">
  <div id="professional-carousel" class="carousel-container" data-carousel="static">
    <!-- Carousel Items -->
    <div class="carousel-track">
      {items.map((item, index) => (
        <div 
          class={`carousel-slide ${index === 0 ? 'active' : ''}`} 
          data-slide={index}
          onclick={`window.location.href='${item.link}'`}
        >
          <!-- Background Images -->
          <div class="slide-background">
            <img
              src={item.desktopImage}
              class="desktop-image"
              alt={`${item.title} - Desktop`}
              loading={index === 0 ? 'eager' : 'lazy'}
            />
            <img
              src={item.mobileImage}
              class="mobile-image"
              alt={`${item.title} - Mobile`}
              loading={index === 0 ? 'eager' : 'lazy'}
            />
            <div class="slide-overlay"></div>
          </div>

          <!-- Content -->
          <div class="slide-content">
            <div class="content-wrapper">
              <h1 class="slide-title">{item.title}</h1>
              <p class="slide-description">{item.description}</p>
              <button class="cta-button" type="button">
                <span>{item.ctaText}</span>
                <svg class="cta-arrow" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                </svg>
              </button>
            </div>
          </div>
        </div>
      ))}
    </div>

    <!-- Navigation Dots -->
    <div class="carousel-dots">
      {items.map((_, index) => (
        <button
          type="button"
          class={`dot ${index === 0 ? 'active' : ''}`}
          data-slide-to={index}
          aria-label={`Go to slide ${index + 1}`}
        ></button>
      ))}
    </div>

    <!-- Navigation Arrows -->
    <button type="button" class="nav-button nav-prev" data-prev>
      <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <polyline points="15,18 9,12 15,6"></polyline>
      </svg>
    </button>
    <button type="button" class="nav-button nav-next" data-next>
      <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <polyline points="9,18 15,12 9,6"></polyline>
      </svg>
    </button>
  </div>
</div>

<style is:global>
  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap');

 body {
    overflow-x: hidden !important;
    width: 100%;
  }

  .professional-carousel-wrapper {
    width: 100vw;
    position: relative;
    left: 50%;
    right: 50%;
    margin-left: -50vw;
    margin-right: -50vw;
    overflow: hidden;
  }

  .carousel-container {
    position: relative;
    width: 100%;
    height: 100vh;
    min-height: 600px;
    overflow: hidden;
    background: #000;
  }

  .carousel-track {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .carousel-slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    visibility: hidden;
    transition: opacity 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    cursor: pointer;
  }

  .carousel-slide.active {
    opacity: 1;
    visibility: visible;
  }

  .slide-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  .desktop-image,
  .mobile-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .mobile-image {
    display: none;
  }

  .slide-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      135deg,
      rgba(0, 0, 0, 0.4) 0%,
      rgba(0, 0, 0, 0.2) 50%,
      rgba(0, 0, 0, 0.6) 100%
    );
    z-index: 1;
  }

  .carousel-slide:hover .desktop-image,
  .carousel-slide:hover .mobile-image {
    transform: scale(1.05);
  }

  .slide-content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 2;
    padding: 2rem;
  }

  .content-wrapper {
    text-align: center;
    max-width: 800px;
    color: white;
    transform: translateY(30px);
    opacity: 0;
    transition: all 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .carousel-slide.active .content-wrapper {
    transform: translateY(0);
    opacity: 1;
    transition-delay: 0.4s;
  }

  .slide-title {
    font-family: 'Inter', sans-serif;
    font-size: clamp(2.5rem, 5vw, 4rem);
    font-weight: 800;
    letter-spacing: -0.02em;
    margin-bottom: 1.5rem;
    line-height: 1.1;
    background: linear-gradient(135deg, #fff 0%, #e2e8f0 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  }

  .slide-description {
    font-size: clamp(1.1rem, 2vw, 1.3rem);
    font-weight: 400;
    line-height: 1.6;
    margin-bottom: 2.5rem;
    opacity: 0.95;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
  }

  .cta-button {
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1rem 2rem;
    background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
    color: white;
    border: none;
    border-radius: 50px;
    font-family: 'Inter', sans-serif;
    font-size: 1rem;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    cursor: pointer;
    box-shadow: 
      0 4px 20px rgba(59, 130, 246, 0.3),
      0 0 0 0 rgba(59, 130, 246, 0.5);
    position: relative;
    overflow: hidden;
  }

  .cta-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    transition: left 0.5s;
  }

  .cta-button:hover::before {
    left: 100%;
  }

  .cta-button:hover {
    transform: translateY(-2px);
    box-shadow: 
      0 8px 30px rgba(59, 130, 246, 0.4),
      0 0 0 3px rgba(59, 130, 246, 0.2);
    background: linear-gradient(135deg, #2563eb 0%, #1e40af 100%);
  }

  .cta-arrow {
    width: 20px;
    height: 20px;
    transition: transform 0.3s ease;
  }

  .cta-button:hover .cta-arrow {
    transform: translateX(4px);
  }

  /* Navigation Dots */
  .carousel-dots {
    position: absolute;
    bottom: 2rem;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 1rem;
    z-index: 10;
  }

  .dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: 2px solid rgba(255, 255, 255, 0.5);
    background: transparent;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .dot.active,
  .dot:hover {
    background: white;
    border-color: white;
    transform: scale(1.2);
  }

  /* Navigation Arrows */
  .nav-button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 50px;
    height: 50px;
    background: transparent;
    border: none;
    color: rgba(255, 255, 255, 0.6);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    z-index: 10;
    opacity: 0;
  }

  .carousel-container:hover .nav-button {
    opacity: 1;
  }

  .nav-button svg {
    width: 28px;
    height: 28px;
    stroke-width: 2.5;
  }

  .nav-button:hover {
    color: #3b82f6;
    transform: translateY(-50%) scale(1.2);
  }

  .nav-button:active {
    color: #1d4ed8;
    transform: translateY(-50%) scale(1.1);
  }

  .nav-prev {
    left: 2rem;
  }

  .nav-next {
    right: 2rem;
  }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .carousel-container {
      height: 60vh;
      min-height: 400px;
    }

    .desktop-image {
      display: none;
    }

    .mobile-image {
      display: block;
      object-fit: cover;
      object-position: center;
    }

    .slide-content {
      padding: 1.5rem;
    }

    .slide-title {
      font-size: 2.5rem;
      margin-bottom: 1rem;
    }

    .slide-description {
      font-size: 1.1rem;
      margin-bottom: 2rem;
    }

    .cta-button {
      padding: 0.875rem 1.75rem;
      font-size: 0.95rem;
    }

    .nav-button {
      width: 40px;
      height: 40px;
    }

    .nav-button svg {
      width: 24px;
      height: 24px;
    }

    .nav-prev {
      left: 1rem;
    }

    .nav-next {
      right: 1rem;
    }

    .carousel-dots {
      bottom: 1.5rem;
      gap: 0.75rem;
    }

    .dot {
      width: 10px;
      height: 10px;
    }
  }

  @media (max-width: 480px) {
    .carousel-container {
      height: 50vh;
      min-height: 350px;
    }

    .slide-title {
      font-size: 2rem;
    }

    .slide-description {
      font-size: 1rem;
    }

    .cta-button {
      padding: 0.75rem 1.5rem;
      font-size: 0.9rem;
    }
  }
</style>

<script is:inline>
  document.addEventListener('DOMContentLoaded', function() {
    const carousel = document.getElementById('professional-carousel');
    if (!carousel) return;

    const slides = carousel.querySelectorAll('.carousel-slide');
    const dots = carousel.querySelectorAll('.dot');
    const prevBtn = carousel.querySelector('[data-prev]');
    const nextBtn = carousel.querySelector('[data-next]');
    
    let currentSlide = 0;
    let autoSlideInterval;
    let isTransitioning = false;

    function updateSlide(index) {
      if (isTransitioning) return;
      isTransitioning = true;

      // Hide all slides
      slides.forEach(slide => {
        slide.classList.remove('active');
      });

      // Update dots
      dots.forEach((dot, i) => {
        dot.classList.toggle('active', i === index);
      });

      // Show new slide with delay for smooth transition
      setTimeout(() => {
        slides[index].classList.add('active');
        currentSlide = index;
        
        setTimeout(() => {
          isTransitioning = false;
        }, 300);
      }, 100);

      resetAutoSlide();
    }

    function nextSlide() {
      const next = (currentSlide + 1) % slides.length;
      updateSlide(next);
    }

    function prevSlide() {
      const prev = (currentSlide - 1 + slides.length) % slides.length;
      updateSlide(prev);
    }

    function startAutoSlide() {
      autoSlideInterval = setInterval(nextSlide, 6000);
    }

    function resetAutoSlide() {
      clearInterval(autoSlideInterval);
      startAutoSlide();
    }

    // Event listeners
    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => updateSlide(index));
    });

    if (prevBtn) prevBtn.addEventListener('click', prevSlide);
    if (nextBtn) nextBtn.addEventListener('click', nextSlide);

    // Touch/swipe support
    let startX = 0;
    let endX = 0;

    carousel.addEventListener('touchstart', e => {
      startX = e.touches[0].clientX;
    });

    carousel.addEventListener('touchend', e => {
      endX = e.changedTouches[0].clientX;
      handleSwipe();
    });

    function handleSwipe() {
      const threshold = 50;
      const diff = startX - endX;

      if (Math.abs(diff) > threshold) {
        if (diff > 0) {
          nextSlide();
        } else {
          prevSlide();
        }
      }
    }

    // Keyboard navigation
    document.addEventListener('keydown', e => {
      if (e.key === 'ArrowLeft') prevSlide();
      if (e.key === 'ArrowRight') nextSlide();
    });

    // Pause on hover
    carousel.addEventListener('mouseenter', () => {
      clearInterval(autoSlideInterval);
    });

    carousel.addEventListener('mouseleave', () => {
      startAutoSlide();
    });

    // Initialize
    updateSlide(0);
    startAutoSlide();

    // Intersection Observer for performance
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          startAutoSlide();
        } else {
          clearInterval(autoSlideInterval);
        }
      });
    });

    observer.observe(carousel);
  });
</script>